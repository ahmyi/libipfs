name: Release
on:
  push:
    tags:
      - '*'

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: libipfs Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md
      - id: step_upload_url
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

  build-and-publish:
    name: Publish release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, ubuntu-18.04]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Install dependencies for linux build
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update && sudo apt install -y build-essential zip

      - name: Install dependencies for windows build
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: |
          sudo apt update && sudo apt install -y gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine64
          
      - name: Install go dependencies
        run: |
          go get github.com/sirupsen/logrus
          go get github.com/ipfs/go-ipfs-api
          go get github.com/mjibson/esc

      - name: Build libipfs for linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: make build_linux

      - name: Build libipfs for windows
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: make build_windows

      - name: Build libipfs for macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: make build_macos

      - name: Pacakge artifacts linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir libipfs${{ github.event.release.tag_name }}-linux-x64/
          cp -rf ./bin/libipfs-linux* libipfs${{ github.event.release.tag_name }}-linux-x64/
          zip -r libipfs${{ github.event.release.tag_name }}-linux-x64.zip libipfs${{ github.event.release.tag_name }}-linux-x64/

      - name: Pacakge artifacts windows
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: |
          mkdir libipfs${{ github.event.release.tag_name }}-win-x64/
          cp -rf ./bin/libipfs-win* libipfs${{ github.event.release.tag_name }}-win-x64/
          zip -r libipfs${{ github.event.release.tag_name }}-win-x64.zip libipfs${{ github.event.release.tag_name }}-win-x64/

      - name: Pacakge artifacts macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          mkdir libipfs${{ github.event.release.tag_name }}-macOS-x64/
          cp -rf ./bin/libipfs-mac* libipfs${{ github.event.release.tag_name }}-macOS-x64/
          zip -r libipfs${{ github.event.release.tag_name }}-macOS-x64.zip libipfs${{ github.event.release.tag_name }}-macOS-x64/

      - name: Upload aritifacts for linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./libipfs${{ github.event.release.tag_name }}-linux-x64.zip
          asset_name: libipfs${{ github.event.release.tag_name }}-linux-x64.zip
          asset_content_type: application/zip

      - name: Upload aritifacts for windows
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./libipfs${{ github.event.release.tag_name }}-win-x64.zip
          asset_name: libipfs${{ github.event.release.tag_name }}-win-x64.zip
          asset_content_type: application/zip
          
      - name: Upload aritifacts for macOS
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./libipfs${{ github.event.release.tag_name }}-macOS-x64.zip
          asset_name: libipfs${{ github.event.release.tag_name }}-macOS-x64.zip
          asset_content_type: application/zip